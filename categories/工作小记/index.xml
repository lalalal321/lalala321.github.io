<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>工作小记 on Fan&#39;s Home</title>
    <link>https://lalalal321.github.io/categories/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E8%AE%B0/</link>
    <description>Recent content in 工作小记 on Fan&#39;s Home</description>
    <image>
      <title>Fan&#39;s Home</title>
      <url>https://lalalal321.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://lalalal321.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 15 Feb 2023 21:51:55 +0800</lastBuildDate><atom:link href="https://lalalal321.github.io/categories/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nodejs l10n</title>
      <link>https://lalalal321.github.io/posts/node-l10n/</link>
      <pubDate>Wed, 15 Feb 2023 21:51:55 +0800</pubDate>
      
      <guid>https://lalalal321.github.io/posts/node-l10n/</guid>
      <description>Recently, our team started to do localization(l10n). The package we are using in the front end is &amp;lsquo;i18next&amp;rsquo;, an internationalization-framework written in and for JavaScript. I decided to use it in the backend because of its applicability.
Quick start of i18next 1.Load the language resource from git submodule
&amp;ldquo;cover&amp;rdquo; and &amp;ldquo;page&amp;rdquo; represent objects load from json files in submodule.
// English resources const en = { cover, page, }; 2.Init i18next</description>
    </item>
    
  </channel>
</rss>
